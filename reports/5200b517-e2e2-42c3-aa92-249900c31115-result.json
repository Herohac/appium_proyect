{"name": "Login completo con selección de local, caja y turno", "status": "broken", "statusDetails": {"message": "Exception: Error al aperturar caja: Message: An element could not be located on the page using the given search parameters.\nStacktrace:\nNoSuchElementError: An element could not be located on the page using the given search parameters.\n    at AndroidUiautomator2Driver.findElOrEls (C:\\Users\\kaled\\.appium\\node_modules\\appium-uiautomator2-driver\\node_modules\\appium-android-driver\\lib\\commands\\find.ts:86:11)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at AndroidUiautomator2Driver.findElOrElsWithProcessing (C:\\Users\\kaled\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\find.ts:60:12)\n    at AndroidUiautomator2Driver.findElement (C:\\Users\\kaled\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\find.ts:75:12)", "trace": "driver = <appium.webdriver.webdriver.WebDriver (session=\"b4f3e613-aa8f-4637-9784-b0e16d469ace\")>\n\n    def completar_flows(driver):\n        # Espera a que aparezca la pantalla de carga\n        with allure.step(\"Esperar la pantalla de carga hasta 100%\"):\n            WebDriverWait(driver, 30).until(\n                EC.visibility_of_element_located((AppiumBy.ID, \"pe.restaurant.apprestaurant:id/progress_status_message\"))\n            )\n            # Puedes agregar un paso adicional para verificar el progreso (de 0 a 100%)\n            progress_message = driver.find_element(AppiumBy.ID, \"pe.restaurant.apprestaurant:id/progress_status_message\").text\n            allure.attach(progress_message, name=\"Pantalla de Carga\", attachment_type=allure.attachment_type.TEXT)\n    \n        with allure.step(\"Aperturar caja en cero si está disponible\"):\n            try:\n>               caja_abrir = driver.find_element(AppiumBy.ID, \"pe.restaurant.apprestaurant:id/tv_abrir_con_cero\")\n\ntest\\test_flows.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\appium\\webdriver\\webdriver.py:390: in find_element\n    return self.execute(RemoteCommand.FIND_ELEMENT, {'using': by, 'value': value})['value']\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:424: in execute\n    self.error_handler.check_response(response)\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\appium\\webdriver\\errorhandler.py:30: in check_response\n    raise wde\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\appium\\webdriver\\errorhandler.py:26: in check_response\n    super().check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x00000214422B6FC0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"An element could not be located on the page u...ode_modules\\\\\\\\appium\\\\\\\\node_modules\\\\\\\\@appium\\\\\\\\base-driver\\\\\\\\lib\\\\\\\\basedriver\\\\\\\\commands\\\\\\\\find.ts:75:12)\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters.\nE       Stacktrace:\nE       NoSuchElementError: An element could not be located on the page using the given search parameters.\nE           at AndroidUiautomator2Driver.findElOrEls (C:\\Users\\kaled\\.appium\\node_modules\\appium-uiautomator2-driver\\node_modules\\appium-android-driver\\lib\\commands\\find.ts:86:11)\nE           at processTicksAndRejections (node:internal/process/task_queues:95:5)\nE           at AndroidUiautomator2Driver.findElOrElsWithProcessing (C:\\Users\\kaled\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\find.ts:60:12)\nE           at AndroidUiautomator2Driver.findElement (C:\\Users\\kaled\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\find.ts:75:12)\n\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_login_apertura.TestInicioSesion testMethod=test_login_completo_y_seleccion>\n\n    @allure.title(\"Login completo con selección de local, caja y turno\")\n    def test_login_completo_y_seleccion(self):\n        usuario = \"admin2@rest.pe\"\n        contrasena = \"123456\"\n    \n        with allure.step(\"Login\"):\n            login(self.driver, usuario, contrasena)\n    \n        with allure.step(\"Seleccionar local\"):\n            seleccionar_local(self.driver)\n    \n        with allure.step(\"Seleccionar Caja 03\"):\n            seleccionar_caja(self.driver)\n    \n        with allure.step(\"Seleccionar turno\"):\n            seleccionar_turno(self.driver)\n    \n        with allure.step(\"Presentar flujo de apertura de caja\"):\n>           completar_flows(self.driver)\n\npruebas\\test_login_apertura.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndriver = <appium.webdriver.webdriver.WebDriver (session=\"b4f3e613-aa8f-4637-9784-b0e16d469ace\")>\n\n    def completar_flows(driver):\n        # Espera a que aparezca la pantalla de carga\n        with allure.step(\"Esperar la pantalla de carga hasta 100%\"):\n            WebDriverWait(driver, 30).until(\n                EC.visibility_of_element_located((AppiumBy.ID, \"pe.restaurant.apprestaurant:id/progress_status_message\"))\n            )\n            # Puedes agregar un paso adicional para verificar el progreso (de 0 a 100%)\n            progress_message = driver.find_element(AppiumBy.ID, \"pe.restaurant.apprestaurant:id/progress_status_message\").text\n            allure.attach(progress_message, name=\"Pantalla de Carga\", attachment_type=allure.attachment_type.TEXT)\n    \n        with allure.step(\"Aperturar caja en cero si está disponible\"):\n            try:\n                caja_abrir = driver.find_element(AppiumBy.ID, \"pe.restaurant.apprestaurant:id/tv_abrir_con_cero\")\n                if caja_abrir.is_displayed():\n                    caja_abrir.click()\n    \n                    # Confirmación inicial\n                    WebDriverWait(driver, 10).until(\n                        EC.element_to_be_clickable((AppiumBy.ID, \"pe.restaurant.apprestaurant:id/tv_confirm\"))\n                    ).click()\n    \n                    # Ingresar PIN: 4 3 2 1\n                    driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR, 'new UiSelector().text(\"1\")').click()\n                    driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR, 'new UiSelector().text(\"2\")').click()\n                    driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR, 'new UiSelector().text(\"3\")').click()\n                    driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR, 'new UiSelector().text(\"4\")').click()\n    \n                    # Confirmar PIN\n                    driver.find_element(AppiumBy.ID, \"pe.restaurant.apprestaurant:id/button_confirm\").click()\n                    allure.attach(\"PIN ingresado y confirmado\", name=\"Ingreso PIN\", attachment_type=allure.attachment_type.TEXT)\n    \n                    # Esperar la animación de apertura (7 segundos)\n                    time.sleep(7)\n    \n                    # Confirmación final\n                    WebDriverWait(driver, 10).until(\n                        EC.element_to_be_clickable((AppiumBy.ID, \"pe.restaurant.apprestaurant:id/confirm_button\"))\n                    ).click()\n                    allure.attach(\"Caja aperturada correctamente\", name=\"Confirmación final\", attachment_type=allure.attachment_type.TEXT)\n    \n            except Exception as e:\n                allure.attach(f\"❌ Error durante la apertura de caja: {str(e)}\", name=\"Error Caja\", attachment_type=allure.attachment_type.TEXT)\n>               raise Exception(f\"Error al aperturar caja: {str(e)}\")\nE               Exception: Error al aperturar caja: Message: An element could not be located on the page using the given search parameters.\nE               Stacktrace:\nE               NoSuchElementError: An element could not be located on the page using the given search parameters.\nE                   at AndroidUiautomator2Driver.findElOrEls (C:\\Users\\kaled\\.appium\\node_modules\\appium-uiautomator2-driver\\node_modules\\appium-android-driver\\lib\\commands\\find.ts:86:11)\nE                   at processTicksAndRejections (node:internal/process/task_queues:95:5)\nE                   at AndroidUiautomator2Driver.findElOrElsWithProcessing (C:\\Users\\kaled\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\find.ts:60:12)\nE                   at AndroidUiautomator2Driver.findElement (C:\\Users\\kaled\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\find.ts:75:12)\n\ntest\\test_flows.py:49: Exception"}, "steps": [{"name": "Login", "status": "passed", "start": 1747065091278, "stop": 1747065096008}, {"name": "Seleccionar local", "status": "passed", "start": 1747065096008, "stop": 1747065098421}, {"name": "Seleccionar Caja 03", "status": "passed", "attachments": [{"name": "Caja 03 Seleccionada", "source": "e83a2375-51df-40ba-81f2-5ca5cfaef9f2-attachment.png", "type": "image/png"}], "start": 1747065098421, "stop": 1747065100779}, {"name": "Seleccionar turno", "status": "passed", "start": 1747065100779, "stop": 1747065102499}, {"name": "Presentar flujo de apertura de caja", "status": "broken", "statusDetails": {"message": "Exception: Error al aperturar caja: Message: An element could not be located on the page using the given search parameters.\nStacktrace:\nNoSuchElementError: An element could not be located on the page using the given search parameters.\n    at AndroidUiautomator2Driver.findElOrEls (C:\\Users\\kaled\\.appium\\node_modules\\appium-uiautomator2-driver\\node_modules\\appium-android-driver\\lib\\commands\\find.ts:86:11)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at AndroidUiautomator2Driver.findElOrElsWithProcessing (C:\\Users\\kaled\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\find.ts:60:12)\n    at AndroidUiautomator2Driver.findElement (C:\\Users\\kaled\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\find.ts:75:12)\n", "trace": "  File \"C:\\Users\\kaled\\OneDrive\\Escritorio\\documentos  ppp\\appium_proyect\\pruebas\\test_login_apertura.py\", line 49, in test_login_completo_y_seleccion\n    completar_flows(self.driver)\n  File \"C:\\Users\\kaled\\OneDrive\\Escritorio\\documentos  ppp\\appium_proyect\\test\\test_flows.py\", line 49, in completar_flows\n    raise Exception(f\"Error al aperturar caja: {str(e)}\")\n"}, "steps": [{"name": "Esperar la pantalla de carga hasta 100%", "status": "passed", "attachments": [{"name": "Pantalla de Carga", "source": "81c0522b-1555-4241-92fa-ca0742471e28-attachment.txt", "type": "text/plain"}], "start": 1747065102499, "stop": 1747065113521}, {"name": "Aperturar caja en cero si está disponible", "status": "broken", "statusDetails": {"message": "Exception: Error al aperturar caja: Message: An element could not be located on the page using the given search parameters.\nStacktrace:\nNoSuchElementError: An element could not be located on the page using the given search parameters.\n    at AndroidUiautomator2Driver.findElOrEls (C:\\Users\\kaled\\.appium\\node_modules\\appium-uiautomator2-driver\\node_modules\\appium-android-driver\\lib\\commands\\find.ts:86:11)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at AndroidUiautomator2Driver.findElOrElsWithProcessing (C:\\Users\\kaled\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\find.ts:60:12)\n    at AndroidUiautomator2Driver.findElement (C:\\Users\\kaled\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\find.ts:75:12)\n", "trace": "  File \"C:\\Users\\kaled\\OneDrive\\Escritorio\\documentos  ppp\\appium_proyect\\test\\test_flows.py\", line 49, in completar_flows\n    raise Exception(f\"Error al aperturar caja: {str(e)}\")\n"}, "attachments": [{"name": "Error Caja", "source": "b182343b-e0e8-4889-bca6-3308b4ca8944-attachment.txt", "type": "text/plain"}], "start": 1747065113521, "stop": 1747065124278}], "start": 1747065102499, "stop": 1747065124288}], "start": 1747065085128, "stop": 1747065124904, "uuid": "46d3dc06-28ff-4aee-8b0a-efe26cc6dd08", "historyId": "59e2206ccf7889959f9c5dd12b04c9c2", "testCaseId": "59e2206ccf7889959f9c5dd12b04c9c2", "fullName": "pruebas.test_login_apertura.TestInicioSesion#test_login_completo_y_seleccion", "labels": [{"name": "epic", "value": "Inicio de app y navegación"}, {"name": "parentSuite", "value": "pruebas"}, {"name": "suite", "value": "test_login_apertura"}, {"name": "subSuite", "value": "TestInicioSesion"}, {"name": "host", "value": "Piero"}, {"name": "thread", "value": "9848-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "pruebas.test_login_apertura"}]}